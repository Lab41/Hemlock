{"name":"Hemlock","tagline":"Hemlock is a way of providing a common data access layer.","body":"Hemlock\r\n=======\r\n\r\nHemlock is an open-source project exploring ways to create a common data access\r\nlayer that eliminates the need to understand underlying data topologies but\r\nstill preserving the requirements of each data source such as access control,\r\nperformance, and formats.\r\n\r\n![Hemlock L](https://raw.github.com/Lab41/Hemlock/master/docs/images/overview_hemlock.png \"Hemlock\")\r\n\r\nInstall instructions\r\n====================\r\n\r\nOption A, install using pip:\r\n\r\n```bash\r\nsudo pip install hemlock\r\n```\r\n\r\nOption B, build from source:\r\n\r\n```bash\r\ngit clone https://github.com/Lab41/Hemlock.git\r\ncd Hemlock\r\nsudo python setup.py install\r\n```\r\n\r\nRequired Dependencies\r\n---------------------\r\n\r\nPython modules:\r\n- [MySQLdb](http://mysql-python.sourceforge.net/MySQLdb.html)\r\n- [texttable](https://pypi.python.org/pypi/texttable)\r\n- [couchbase](http://www.couchbase.com/communities/python/getting-started) >= 1.0\r\n- [APScheduler](https://pypi.python.org/pypi/APScheduler)\r\n\r\nBuild a server running [MySQL](http://www.mysql.com/) to store user accounts, tenants, and registered \r\nsystems.\r\n\r\n\r\nBuild a [Couchbase 2.0](http://www.couchbase.com/) cluster to store metadata and data of registered systems.\r\n\r\nBuild an [ElasticSearch 0.90.2](http://www.elasticsearch.org/) cluster to store the index of Couchbase.\r\n\r\nAdd XDCR one-way replication from Couchbase to ElasticSearch using this [plugin](https://github.com/couchbaselabs/elasticsearch-transport-couchbase) (Note, grab version 1.1.0).\r\n\r\nOnce the plugin is installed, be sure and update the couchbase_template.json under plugins/transport-couchbase/ to have the following:\r\n\r\n```json\r\n{\r\n    \"template\" : \"*\",\r\n    \"order\" : 10,\r\n    \"mappings\" : {\r\n        \"couchbaseCheckpoint\" : {\r\n            \"_source\" : {\r\n                \"includes\" : [\"doc.*\"]\r\n            },\r\n            \"date_detection\" : false,\r\n            \"dynamic_templates\": [\r\n                {\r\n                    \"store_no_index\": {\r\n                        \"match\": \"*\",\r\n                        \"mapping\": {\r\n                            \"store\" : \"no\",\r\n                            \"index\" : \"no\",\r\n                            \"include_in_all\" : false\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        \"_default_\" : {\r\n            \"_source\" : {\r\n                \"includes\" : [\"meta.*\"]\r\n            },\r\n            \"date_detection\" : false,\r\n            \"properties\" : {\r\n                \"meta\" : {\r\n                    \"type\" : \"object\",\r\n                    \"include_in_all\" : false\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOnce that is added, start up ElasticSearch with ``bin/elasticsearch`` and then perform the following the first time:\r\n\r\n```bash\r\ncurl -XPUT http://localhost:9200/_template/couchbase -d @plugins/transport-couchbase/couchbase_template.json\r\n```\r\n\r\nInstalling required databases\r\n-----------------------------\r\n\r\n1. Create database ``hemlock`` in [MySQL](http://www.mysql.com/).\r\n2. Create bucket ``hemlock`` in [Couchbase](http://www.couchbase.com/).\r\n3. Create index ``hemlock`` in [ElasticSearch](http://www.elasticsearch.org/).\r\n\r\n\r\nGetting started\r\n----------------\r\n\r\n1. Create Hemlock credentials (see 'Credential files')\r\n   ```bash\r\n   HEMLOCK_MYSQL_SERVER=192.168.1.10\r\n   HEMLOCK_MYSQL_USERNAME=user\r\n   HEMLOCK_MYSQL_PW=pass\r\n   HEMLOCK_COUCHBASE_SERVER=192.168.1.20\r\n   HEMLOCK_COUCHBASE_BUCKET=hemlock\r\n   HEMLOCK_COUCHBASE_USERNAME=hemlock\r\n   HEMLOCK_COUCHBASE_PW=pass\r\n   ```\r\n\r\n   (if you'd like these to persist, consider adding export before each line and performing ``source`` on the file)\r\n2. Create a tenant, role, user, and data source system\r\n   ```bash\r\n   hemlock tenant-create --name Project1\r\n\r\n   hemlock tenant-list\r\n   \r\n   hemlock role-create --name User\r\n   \r\n   hemlock role-list\r\n   \r\n   hemlock user-create --name User1 \\\r\n                        --username Username1 \\\r\n                        --email user1@email.com \\\r\n                        --rold_id 42ba73f9-0ab6-4a50-908c-1585955754f4 \\\r\n                        --tenant_id 7d0f6b0d-334a-4d89-bd1a-70e8e1c04aa6\r\n   \r\n   hemlock user-list\r\n   \r\n   hemlock register-local-system --name System1 \\\r\n                                  --data_type csv \\\r\n                                  --description \"description\" \\\r\n                                  --tenant_id 7d0f6b0d-334a-4d89-bd1a-70e8e1c04aa6 \\\r\n                                  --hostname system1.fqdn \\\r\n                                  --endpoint http://hemlock.server/ \\\r\n                                  --poc_name user1 \\\r\n                                  --poc_email user1@email.com\r\n   \r\n   hemlock system-list\r\n   ```\r\n3. Add credentials for data source system, for example: mysql_creds\r\n   ```bash\r\n   MYSQL_SERVER=192.168.1.30\r\n   MYSQL_DB=db1\r\n   #MYSQL_TABLE=table1\r\n   MYSQL_USERNAME=user\r\n   MYSQL_PW=pass\r\n   ```\r\n4. Store a client\r\n   ```bash\r\n   hemlock client-store --name mysql_client_1 --type mysql --system_id 7d0f6b0d-334a-4d89-bd1a-70e8e1c04aa6 --credential_file /path/to/mysql_creds \r\n\r\n   hemlock client-list\r\n   ```\r\n5. Add credentials for hemlock\r\n   ```bash\r\n   hemlock hemlock-server-store --credential_file /path/to/hemlock_creds\r\n   ```\r\n6. Add a schedule for the data source system to run (optional)\r\n   ```bash\r\n   hemlock client-schedule --name schedule1 \\\r\n                          --minute \"54\" \\\r\n                          --hour \"12\" \\\r\n                          --day_of_month \"*\" \\\r\n                          --month \"*\" \\\r\n                          --day_of_week \"*\" \\\r\n                          --client_id 7d0f6b0d-334a-4d89-bd1a-70e8e1c04aa6\r\n\r\n   hemlock schedule-list\r\n\r\n   ```\r\n7. Perform a test run for pulling data from the data source system\r\n   ```bash\r\n   hemlock client-run --uuid 7d0f6b0d-334a-4d89-bd1a-70e8e1c04aa6\r\n   ```\r\n8. Search for data that has been loaded into Hemlock\r\n   ```bash\r\n   Full text search with elasticsearch:\r\n\r\n   http://elasticsearch.fqdn:9200/hemlock/_search?q=foo\r\n\r\n   Which returns something the following:\r\n   \r\n   {\r\n    \"took\": 14,\r\n    \"timed_out\": false,\r\n    \"_shards\": {\r\n        \"total\": 20,\r\n        \"successful\": 20,\r\n        \"failed\": 0\r\n    },\r\n    \"hits\": {\r\n        \"total\": 1,\r\n        \"max_score\": 3.6582048,\r\n        \"hits\": [\r\n            {\r\n                \"_index\": \"hemlock\",\r\n                \"_type\": \"couchbaseDocument\",\r\n                \"_id\": \"865f458b4421ae5fd758e3c81aca9f8d8b4696b6\",\r\n                \"_score\": 3.6582048,\r\n                \"_source\": {\r\n                    \"meta\": {\r\n                        \"id\": \"865f458b4421ae5fd758e3c81aca9f8d8b4696b6\",\r\n                        \"rev\": \"1-0010f1ac6045ccf40000000000000000\",\r\n                        \"flags\": 0,\r\n                        \"expiration\": 0\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n   }\r\n\r\n   Now we can feed the 'id' into Couchbase to return the full document:\r\n   \r\n   http://couchbase.fqdn:8092/hemlock/865f458b4421ae5fd758e3c81aca9f8d8b4696b6\r\n   \r\n   Which returns something like the following:\r\n   \r\n   {\r\n    \"hemlock-system\": \"a50b86c2-59f7-42a3-aa67-3367579189fe\",\r\n    \"hemlock-date\": \"2013-09-03 16:10:20\",\r\n    \"stream\": \"DOYLIE\"\r\n   }\r\n   ```\r\n   \r\nCredential files\r\n----------------\r\n\r\n1. Create a ``hemlock_creds`` file (see hemlock_creds_sample for an example): \r\n    ```bash\r\n    HEMLOCK_MYSQL_SERVER=192.168.1.10\r\n    HEMLOCK_MYSQL_USERNAME=user\r\n    HEMLOCK_MYSQL_PW=pass\r\n    HEMLOCK_COUCHBASE_SERVER=192.168.1.20\r\n    HEMLOCK_COUCHBASE_BUCKET=hemlock\r\n    HEMLOCK_COUCHBASE_USERNAME=hemlock\r\n    HEMLOCK_COUCHBASE_PW=pass\r\n    ```\r\n2. Create credential files for each client you intend to use ([examples](https://github.com/Lab41/Hemlock/tree/master/hemlock/clients/)).\r\n\r\n\r\nCurrently supported data sources\r\n================================\r\n\r\nTechnology | Parameter | Python Module Dependencies\r\n---------- | --------- | ------------\r\nMySQL      | mysql     | MySQLdb\r\nMongoDB    | mongo     | pymongo\r\nRedis      | redis     | redis\r\nLocal FileSystem | fs  | magic, pdfminer, xmltodict\r\nRESTful API | rest     | \r\nStreams    | stream_odd |\r\n\r\n\r\nAdding a new data source type\r\n-----------------------------\r\n\r\nCreate a new class under the clients folder for each new data source type.  Most\r\nclasses will need two methods defined: ``connect_client`` and ``get_data``.\r\n\r\nThe following is a template that can be used to work from:\r\n\r\n```python\r\nclass HMyclient:\r\n    def connect_client(self, client_dict):\r\n        # return a handle that can be used to get data from the data source\r\n        return c_server\r\n    def get_data(self, client_dict, c_server, h_server, client_uuid):\r\n        # data_list is an array of arrays to contain the data\r\n        data_list = [[]]\r\n        # desc_list is an array that contains the schema (if exists or known)\r\n        desc_list = []\r\n        return data_list, desc_list\r\n```\r\n\r\nUsage examples\r\n==============\r\n\r\n- Create a tenant\r\n\r\n    ```bash\r\n    hemlock tenant-create --name Project1\r\n    ```\r\n- Create a role\r\n\r\n    ```bash\r\n    hemlock role-create --name User\r\n    ```\r\n- Create a user\r\n\r\n    ```bash\r\n    hemlock user-create --name User1 \\\r\n                        --username Username1 \\\r\n                        --email user1@email.com \\\r\n                        --rold_id 42ba73f9-0ab6-4a50-908c-1585955754f4 \\\r\n                        --tenant_id 7d0f6b0d-334a-4d89-bd1a-70e8e1c04aa6\r\n    ```\r\n- Register a local system\r\n\r\n    ```bash\r\n    hemlock register-local-system --name System1 \\\r\n                                  --data_type csv \\\r\n                                  --description \"description\" \\\r\n                                  --tenant_id 7d0f6b0d-334a-4d89-bd1a-70e8e1c04aa6 \\\r\n                                  --hostname system1.fqdn \\\r\n                                  --endpoint http://hemlock.server/ \\\r\n                                  --poc_name user1 \\\r\n                                  --poc_email user1@email.com\r\n    ```\r\n- List registered systems\r\n\r\n    ```bash\r\n    hemlock system-list\r\n    ```\r\n- List created users\r\n\r\n    ```bash\r\n    hemlock user-list\r\n    ```\r\n- Lists created tenants\r\n\r\n    ```bash\r\n    hemlock tenant-list\r\n    ```\r\n- [Connecting to a client](https://github.com/Lab41/Hemlock/tree/master/hemlock/clients/)\r\n- [Full CLI API list](https://github.com/Lab41/Hemlock/blob/master/docs/CLI.md)\r\n\r\n\r\nRelated repositories\r\n====================\r\n\r\n - [Hemlock-REST](http://lab41.github.io/Hemlock-REST/)\r\n - [Hemlock-Frontend](http://lab41.github.io/Hemlock-Frontend/)\r\n\r\nTests\r\n=====\r\n\r\nThe tests for this project use [py.test](http://pytest.org/latest/)\r\n\r\nTravis CI Status\r\n================\r\n\r\n[![Build Status](https://travis-ci.org/Lab41/Hemlock.png?branch=master)](https://travis-ci.org/Lab41/Hemlock)\r\n\r\n\r\nContributing to Hemlock\r\n=======================\r\n\r\nWhat to contribute?  Awesome!  Issue a pull request or see more details [here](https://github.com/Lab41/Hemlock/blob/master/CONTRIBUTING.md).\r\n","google":"UA-40464073-1","note":"Don't delete this file! It's used internally to help with page regeneration."}